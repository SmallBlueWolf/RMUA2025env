%YAML:1.0

# 常用参数
# 支持：1个IMU和1个摄像头；1个IMU和2个摄像头；2个摄像头；
imu: 1         
num_of_cam: 2

imu_topic: "/airsim_node/drone_1/imu/imu"
image0_topic: "/uniarc/leftimg"
image1_topic: "/uniarc/rightimg"
output_path: "~/output/"

cam0_calib: "cam0_mei.yaml"
cam1_calib: "cam1_mei.yaml"
image_width: 960
image_height: 720


# IMU与相机之间的外参
estimate_extrinsic: 1  # 0：拥有准确的外参。我们将信任以下imu^R_cam，imu^T_cam，且不更改它。
                        # 1：对外参有初步猜测。我们将围绕你的初步猜测进行优化。

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [0.0148655429818, -0.999880929698, 0.00414029679422, -0.0216401454975,
#            0.999557249008, 0.0149672133247, 0.025715529948,  -0.064676986768,
#            -0.0257744366974, 0.00375618835797, 0.999660727178, 0.00981073058949,
#            0, 0, 0, 1]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [1.000000, 0.000000, 0.000000, 0.000000,
           0.000000, 1.000000, 0.000000, 0.000000,
           0.000000, 0.000000, 1.000000, 0.175000,
           0.000000, 0.000000, 0.000000, 1.000000]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [1.000000, 0.000000, 0.000000, 0.000000,
           0.000000, 1.000000, 0.000000, 0.000000,
           0.000000, 0.000000, 1.000000, 0.475000,
           0.000000, 0.000000, 0.000000, 1.000000]


# 支持多线程
multiple_thread: 5

# 特征跟踪参数
max_cnt: 150            # 特征跟踪中的最大特征数量
min_dist: 30            # 两个特征之间的最小距离
freq: 10                # 跟踪结果发布频率（Hz）。为了良好的估计，至少需要10Hz。如果设置为0，频率将与原始图像相同
F_threshold: 1.0        # RANSAC阈值（像素）
show_track: 1           # 发布跟踪图像作为话题
flow_back: 1            # 执行前向和后向光流，以提高特征跟踪精度

# 优化参数
max_solver_time: 0.04  # 最大求解器迭代时间（毫秒），以保证实时性
max_num_iterations: 8   # 最大求解器迭代次数，以保证实时性
keyframe_parallax: 10.0 # 关键帧选择阈值（像素）

# IMU参数       提供的参数越准确，性能越好
acc_n: 0.1          # 加速度计测量噪声的标准差
gyr_n: 0.01         # 陀螺仪测量噪声的标准差
acc_w: 0.001        # 加速度计偏置随机工作噪声的标准差
gyr_w: 0.0001       # 陀螺仪偏置随机工作噪声的标准差
g_norm: 9.81007     # 重力加速度大小

# 非同步参数
estimate_td: 0                      # 在线估计相机与IMU之间的时间偏移
td: 0.0                             # 时间偏移的初始值，单位：秒。读取的图像时钟 + td = 实际图像时钟（IMU时钟）

# 回环闭合参数
load_previous_pose_graph: 0        # 加载并重用之前的姿态图；从'pose_graph_save_path'加载
pose_graph_save_path: "~/output/pose_graph/" # 保存和加载路径
save_image: 1                   # 在姿态图中保存图像以进行可视化；你可以通过设置为0来关闭此功能
